%%  Blind Audio Sound Source Separation (BASS)
%   .....Time blind source separation T-ABCD 
%   - last update 19.01.2015
%   - the function extract single feature from tddeconv and make it
%   possible to use the BASS algorithm in an mfile
%%
function [y, est, data, Xdis] = BSS_tabcd(x, action, Fs, ICAmet, subBands, simil, clust, weiTyp, weiVal, fiLen, xName);
y = 0;
est = 0;

if ischar(x)==0
data.x=x;
data.fs = Fs;
data.method = ICAmet;
data.nsubbands = subBands;
data.similarity = simil;    % 1...projections 2...GCC-PHAT 3...Coherence
data.clustering=clust;
data.filterlength = fiLen;
if nargin==0
   error('Missing input signals!');
end
switch ICAmet
    case 'efica'
        ICAnum=1;
    case 'bgl'
        ICAnum=2;
    case'extefica'
        ICAnum=3;
    case 'bwasobi'
        ICAnum=4;
end

  if size(x,1)>size(x,2)
     x=x';
     fprintf('Warning: Input data transposed!\n');
  end
  data.lengthofplot=floor(length(x));
  data.beginofplot=1;
  data.lengthofICA=Fs;
  data.offsetICA=1;
  data.mu=1;
  data.weighting = weiVal;
  data.wtype = weiTyp;
%       data.weighting=1;
  data.iweights=0;
  data.filterlengtheffective=(1+0.4*abs(data.mu-1)*log10(data.filterlength))*data.filterlength/data.mu;
  %   data.resp=resp;
  figNumber=figure( ...
     'Name',['T-ABCD: ' xName], ...
     'RendererMode','manual',...
     'Position',[100,100,600,600],...
     'Visible','off');


  uicontrol('Style','text','Units','normalized','Position',[0.05 0.94 0.19 0.02], ...
     'FontWeight','bold','String','Mixed signals','HorizontalAlignment','left','BackgroundColor',[1 1 1]);
  data.axesx=axes( ...
     'ButtonDownFcn','BSS_tabcd(''axselect'')',...
     'Units','normalized', ...
     'XTickMode','auto','YTick',[], ...
     'Box','on', ...
     'XLimMode','manual',...
     'YLimMode','manual',...
     'XLim',[data.beginofplot-1 data.lengthofplot],...
     'YLim',[-1 1],...
     'Position',[0.05 0.60 0.70 0.35]);

  showsig(x,data.beginofplot,data.lengthofplot,data.offsetICA,data.lengthofICA);

  if data.lengthofplot<length(data.x)
     val='on';
  else
     val='off';
  end
  data.slider=uicontrol( ...
     'Style','slider', ...
     'Units','normalized', ...
     'Position',[0.05 0.54 0.70 0.025],...
     'Enable',val,...
     'Max',1,'Min',0,'Value',0,...
     'Callback','BSS_tabcd(''scrolling'')');


  uicontrol('Style','text','Units','normalized','Position',[0.05 0.39 0.19 0.02], ...
     'FontWeight','bold','String','Separated signals','HorizontalAlignment','left','BackgroundColor',[1 1 1]);
  data.axess=axes( ...
     'Units','normalized', ...
     'YTick',[], ...
     'Box','on', ...
     'XLimMode','manual',...
     'YLimMode','manual',...
     'XLim',[1 10000],...
     'YLim',[-1 1],...
     'Position',[0.05 0.05 0.70 0.35]);

  uicontrol('Style','text','Units','normalized','Position',[0.20 0.97 0.45 0.025], ...
     'ForegroundColor',[.7 .7 0],'String','Click signal to listen to!',...
     'FontWeight','bold','FontSize',9,'HorizontalAlignment','center','BackgroundColor',[.4 .4 .4]);

  %     %====================================
  %     % The CONSOLE frame
  data.panel=uicontrol( ...
     'Style','frame', ...
     'Units','normalized', ...
     'Position',[0.78 0 0.20 1], ...
     'BackgroundColor',[0.5 0.5 0.5]);

  % ICA offset & length of data
  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.09 0.19 0.05], ...
     'FontWeight','bold','String','Length of block for ICA:', ...
     'HorizontalAlignment','left', ...
     'BackgroundColor',[0.5 0.5 0.5]);

  data.textlength=uicontrol( ...
     'Style','edit', ...
     'Units','normalized', ...
     'Position',[0.87 0.08 0.10 0.025], ...
     'String',num2str(data.lengthofICA), ...
     'Interruptible','off', ...
     'TooltipString','Length of the block of data used for computing separation...',...
     'Callback','BSS_tabcd(''changeicalength'')');

  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.16 0.19 0.05], ...
     'FontWeight','bold','String','Offset of block for ICA:', ...
     'HorizontalAlignment','left', ...
     'BackgroundColor',[0.5 0.5 0.5]);

  data.textoffset=uicontrol( ...
     'Style','edit', ...
     'Units','normalized', ...
     'Position',[0.87 0.15 0.10 0.025], ...
     'String',num2str(data.offsetICA), ...
     'Interruptible','off', ...
     'TooltipString','Beginning of the block of data used for computing separation...',...
     'Callback','BSS_tabcd(''changeicaoffset'')');

  % Length of plot
  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.22 0.19 0.05], ...
     'HorizontalAlignment','left', ...
     'FontWeight','bold','String','Length of plot:', ...
     'BackgroundColor',[0.5 0.5 0.5]);

  data.textplotlength=uicontrol( ...
     'Style','edit', ...
     'Units','normalized', ...
     'Position',[0.87 0.22 0.10 0.025], ...
     'String',num2str(data.lengthofplot), ...
     'Interruptible','off', ...
     'TooltipString','Scope of x-axis...',...
     'Callback','BSS_tabcd(''changelengthofplot'')');

  % Filter length
  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.885 0.19 0.05], ...
     'HorizontalAlignment','left', ...
     'String','Filter Length (Base/Effective):', ...
     'FontWeight','bold',...
     'BackgroundColor',[0.5 0.5 0.5]);

  data.textfilter=uicontrol( ...
     'Style','edit', ...
     'Units','normalized', ...
     'Position',[0.79 0.865 0.08 0.025], ...
     'String',num2str(data.filterlength), ...
     'FontWeight','bold',...
     'Interruptible','off', ...
     'TooltipString','Length of separation filter...',...
     'Callback','BSS_tabcd(''changefilter'')');

  data.textfiltereffectivectrl=uicontrol( ...
     'Style','edit', ...
     'Units','normalized', ...
     'Position',[0.89 0.865 0.08 0.025], ...
     'String',num2str(floor(data.filterlengtheffective)), ...
     'FontWeight','bold',...
     'Interruptible','off', ...
     'TooltipString','Length of separation filter...',...
     'Enable','off');

  % Mu Parameter
  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.81 0.19 0.05], ...
     'HorizontalAlignment','left', ...
     'String','mu parameter:', ...
     'FontWeight','bold',...
     'BackgroundColor',[0.5 0.5 0.5]);

  data.muctrl=uicontrol( ...
     'Style','edit', ...
     'Units','normalized', ...
     'Position',[0.87 0.81 0.10 0.025], ...
     'String',num2str(floor(data.mu)), ...
     'FontWeight','bold',...
     'Interruptible','off',...
     'Callback','BSS_tabcd(''changemu'')', ...
     'TooltipString',['Z. Koldovsk? P. Tichavsk? and J. M?ek, Time-domain Blind Audio Source Separation '...
     'Method Producing Separating Filters of Generalized Feedforward Structure, '...
     'Proc. of LVA/ICA 2010, St. Malo, France, Sept. 2010.']);

  % Method selection
  uicontrol('Style','text','Units','normalized','Position',[0.785 0.785 0.19 0.025], ...
     'String','ICA method:','BackgroundColor',[0.5 0.5 0.5],'HorizontalAlignment','left',...
     'FontWeight','bold');
  data.icamethod = uicontrol( ...
     'Style','popupmenu', ...
     'Units','normalized', ...
     'Position',[0.80 0.76 0.15 0.025], ...
     'Value',ICAnum, ...
     'String',{'EFICA','BGSEP (BGL)','Block EFICA','BARBI AR=1'},...
     'FontWeight','bold',...
     'Interruptible','off', ...
     'Callback','BSS_tabcd(''changeicamethod'')');

 % Similarity measure
  uicontrol('Style','text','Units','normalized','Position',[0.785 0.72 0.19 0.025], ...
     'String','Similarity measure','BackgroundColor',[0.5 0.5 0.5],'HorizontalAlignment','left',...
     'FontWeight','bold');
  data.uisimilarity = uicontrol( ...
     'Style','popupmenu', ...
     'Units','normalized', ...
     'Position',[0.80 0.695 0.15 0.025], ...
     'Value',data.similarity, ...
     'String',{'Projections','GCC-PHAT','Coherence'},...
     'FontWeight','bold',...
     'Interruptible','off', ...
     'Callback','BSS_tabcd(''changesimilarity'')', ...
     'TooltipString',['J. M?ek and Z. Koldovsk? "Fuzzy Clustering of Independent Components '...
     'within Time-Domain Blind Audio Source Separation Method, ' ...
     '10th International workshop on Electronics, Control, Measurement and Signals (ECMS 2011)'...
     ', pp. 44-49, Liberec, Czech Republic, June 2011.']);



  % Clustering method selection
  uicontrol('Style','text','Units','normalized','Position',[0.785 0.66 0.19 0.025], ...
     'String','Clustering method:','BackgroundColor',[0.5 0.5 0.5],'HorizontalAlignment','left',...
     'FontWeight','bold');
  data.hclus = uicontrol('Style','Radio','String','Hierarchical','Units','normalized',...
     'Position',[0.80 0.635 0.17 0.025],'Value',1,'BackgroundColor',[0.5 0.5 0.5],...
     'Callback','BSS_tabcd(''hclus'')');
  data.rfcm = uicontrol('Style','Radio','String','Fuzzy c-means','Units','normalized',...
     'Position',[0.80 0.61 0.17 0.025],'Value',0,'BackgroundColor',[0.5 0.5 0.5],...
     'Callback','BSS_tabcd(''rfcm'')');

  % Weighting type
  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.56 0.19 0.05], ...
     'HorizontalAlignment','left', ...
     'FontWeight','bold','String','Weighting type:', ...
     'BackgroundColor',[0.5 0.5 0.5]);

  data.wtypectrl=uicontrol( ...
     'Style','listbox', ...
     'Units','normalized', ...
     'Position',[0.80 0.54 0.16 0.05], ...
     'FontWeight','bold',...
     'Interruptible','off', ...
     'Callback','BSS_tabcd(''changewtype'')');
%   data.clustering='hclus';
  set(data.wtypectrl,'String',{'Normal','Toeplitz','Binary'});
  set(data.wtypectrl,'Value',data.wtype);      
%      set(data.wtypectrl,'String',{'Normal','N. Constrained','Binary','Fuzzy','F. Constrained', 'F. Binary'});
%      set(data.wtypectrl,'Value',4);
%   data.wtype=1;


  % Level of weighting (exponent)
  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.48 0.19 0.05], ...
     'HorizontalAlignment','left', ...
     'String','Weighting level:', ...
     'FontWeight','bold',...
     'BackgroundColor',[0.5 0.5 0.5]);

  data.wlevel=uicontrol( ...
     'Style','edit', ...
     'Units','normalized', ...
     'Position',[0.87 0.48 0.10 0.025], ...
     'String',num2str(data.weighting), ...
     'FontWeight','bold',...
     'Interruptible','off', ...
     'TooltipString','Weighting degree in reconstruction. Higher value yields higher SIR but causes spectral changes.',...
     'Callback','BSS_tabcd(''changeweighting'')');

  % Use of iweights
%       data.iweightsctrl=uicontrol( ...
%          'Style','checkbox', ...
%          'Units','normalized', ...
%          'Position',[0.785 0.44 0.19 0.025], ...
%          'Value',data.iweights, ...
%          'String','Use of i-weights',...
%          'FontWeight','bold',...
%          'Interruptible','off', ...
%          'BackgroundColor',[0.5 0.5 0.5],...
%          'Callback','BSS_tabcd(''changeiweights'')');


  % Number of subbands
  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.445 0.15 0.025], ...
     'HorizontalAlignment','left', ...
     'String','# Subbands:', ...
     'FontWeight','bold',...
     'BackgroundColor',[0.5 0.5 0.5]);      
  data.subbands=uicontrol( ...
     'Style','popupmenu', ...
     'Units','normalized', ...
     'Position',[0.91 0.45 0.05 0.025], ...
     'Value',data.nsubbands, ...
     'String',{'1','2','4','8','16'},...
     'FontWeight','bold',...
     'Interruptible','off', ...
     'Callback','BSS_tabcd(''changensubbands'')', ...
     'TooltipString',['Z. Koldovsk? P. Tichavsk? and J. M?ek, Subband Blind Audio Source Separation ' ...
     'Using a Time-Domain Algorithm and Tree-Structured QMF Filter Bank, '...
     'Proc. of LVA/ICA 2010, St. Malo, France, Sept. 2010.']);


  % Sampling frequency for playback
  uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.785 0.28 0.19 0.05], ...
     'HorizontalAlignment','left', ...
     'String','Sampling frequency:', ...
     'FontWeight','bold',...
     'BackgroundColor',[0.5 0.5 0.5]);

  data.textfs=uicontrol( ...
     'Style','edit', ...
     'Units','normalized', ...
     'Position',[0.87 0.28 0.10 0.025], ...
     'String',num2str(data.fs), ...
     'Interruptible','off', ...
     'Callback','BSS_tabcd(''changefs'')');

  % Recording device & number of rec. channels selection

  data.isrec = exist('playrec2','file')==3;
  if data.isrec
      uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.05 0.49 0.2 0.02], ...
     'HorizontalAlignment','left', ...
     'String','Recording device', ...
     'FontWeight','bold');

      data.devices=playrec2('getDevices');
      data.devices=data.devices([data.devices.inputChans]>=2);


      data.devrec=uicontrol( ...
     'Style','popupmenu', ...
     'Units','normalized', ...
     'Position',[0.05 0.45 0.45 0.04], ...
     'String',[strvcat(data.devices.name) strvcat(data.devices.hostAPI)], ...
     'Interruptible','on', ...
     'FontWeight','bold',...
     'FontSize',8,...
     'Callback','BSS_tabcd(''changedev'')');

     if ~playrec2('isInitialised')
         playrec2('init',data.devices(1).defaultSampleRate,-1,1);
     else
         playrec2('reset');
         playrec2('init',data.devices(1).defaultSampleRate,-1,1);
     end

     maxchannels=playrec2('getRecMaxChannel');

     uicontrol( ...
     'Style','text', ...
     'Units','normalized', ...
     'Position',[0.50 0.49 0.15 0.02], ...
     'HorizontalAlignment','left', ...
     'String','Nr. of channels', ...
     'FontWeight','bold');

     data.numchan=uicontrol( ...
     'Style','popupmenu', ...
     'Units','normalized', ...
     'Position',[0.55 0.45 0.06 0.04], ...
     'String',num2str((2:maxchannels)'), ...
     'Interruptible','on', ...
     'FontWeight','bold',...
     'FontSize',8,...
     'Value',1);

     if maxchannels<2
         set(data.numchan,'Enable','off');
     end
  end

  % The SEPARATION button
  uicontrol( ...
     'Style','push', ...
     'Units','normalized', ...
     'Position',[0.80 0.94 0.16 0.05], ...
     'String','SEPARATION', ...
     'FontWeight','bold',...
     'ForegroundColor',[1 0 0],...
     'Callback','BSS_tabcd(''separation'')');

  % The RECORD button
  uicontrol( ...
     'Style','push', ...
     'Units','normalized', ...
     'Position',[0.80 0.39 0.16 0.04], ...
     'String','RECORD 5 secs', ...
     'FontWeight','bold',...
     'ForegroundColor',[1 0 0],...
     'Callback','BSS_tabcd(''record'')');

  % The SAVE button
  uicontrol( ...
     'Style','push', ...
     'Units','normalized', ...
     'Position',[0.80 0.34 0.16 0.04], ...
     'String','Save results', ...
     'ForegroundColor',[0 0 0],...
     'Callback','BSS_tabcd(''save'')');


  % The CLOSE button
  uicontrol( ...
     'Style','push', ...
     'Units','normalized', ...
     'Position',[0.80 0.02 0.16 0.05], ...
     'String','Close', ...
     'Callback','close(gcf)');

  set(figNumber,'MenuBar','none');
  set(figNumber,'Visible','on');
  set(gcf,'UserData',data);

switch clust
case 'hclus'
    set(data.hclus,'Value',1);
    set(data.rfcm,'Value',0);
    data.clustering='hclus';
    set(data.wtypectrl,'String',{'Normal','Toeplitz','Binary'});
    %set(data.wtypectrl,'String',{'Normal','Constrained','Binary'});
    set(data.wtypectrl,'Value',weiTyp);
    data.wtype=weiTyp;
case 'rfcm'
    set(data.hclus,'Value',0);
    set(data.rfcm,'Value',1);
    data.clustering='rfcm';
    set(data.wtypectrl,'String',{'Normal','Toeplitz','Binary','Fuzzy','F. Constrained', 'F. Binary'});
    set(data.wtypectrl,'Value',weiTyp);
    data.wtype=weiTyp;
end


% data.weighting = weiVal;
% data.wtype = weiTyp;


elseif ischar(x)==1
    action=x;
end

switch lower(action)
   case 'axselect'
      figNumber=gcf;
      data=get(figNumber,'UserData');
      if gca~=data.axesx
         return;
      end

      if strcmp(get(figNumber,'SelectionType'),'normal')
         currPt=get(data.axesx,'CurrentPoint');
         currPt=floor(currPt(1));
         if currPt<data.offsetICA+data.lengthofICA
            data.lengthofICA=data.offsetICA+data.lengthofICA-currPt+1;
            data.offsetICA=currPt;
         end
      else
         currPt=get(data.axesx,'CurrentPoint');
         currPt=floor(currPt(1));
         if currPt>data.offsetICA
            data.lengthofICA=currPt-data.offsetICA+1;
         end
      end
      set(gcf,'CurrentAxes',data.axesx);
      showsig(data.x,data.beginofplot,data.lengthofplot,data.offsetICA,data.lengthofICA);
      set(data.textlength,'String',num2str(data.lengthofICA));
      set(data.textoffset,'String',num2str(data.offsetICA));
      set(gcf,'UserData',data);

   case 'scrolling'
      data=get(gcf,'UserData');
      set(gcf,'CurrentAxes',data.axesx);
      val=get(data.slider,'Value');
      data.beginofplot=floor((length(data.x)-data.lengthofplot)*val)+1;
      showsig(data.x,data.beginofplot,data.lengthofplot,data.offsetICA,data.lengthofICA);
      set(gcf,'UserData',data);

   case 'changeicalength'
      data=get(gcf,'UserData');
      val=floor(str2double(get(data.textlength,'String')));
      if ~isnan(val)
         data.lengthofICA=min([val length(data.x)-data.offsetICA+1]);
         set(data.textlength,'String',num2str(data.lengthofICA));
         set(gcf,'CurrentAxes',data.axesx);
         showsig(data.x,data.beginofplot,data.lengthofplot,data.offsetICA,data.lengthofICA);
         set(gcf,'UserData',data);
      else
         set(data.textlength,'String',num2str(data.lengthofICA));
      end

   case 'changeicaoffset'
      data=get(gcf,'UserData');
      val=floor(str2double(get(data.textoffset,'String')));
      if ~isnan(val)
         data.offsetICA=min([val length(data.x)-data.lengthofICA+1]);
         set(data.textoffset,'String',num2str(data.offsetICA));
         set(gcf,'CurrentAxes',data.axesx);
         showsig(data.x,data.beginofplot,data.lengthofplot,data.offsetICA,data.lengthofICA);
         set(gcf,'UserData',data);
      else
         set(data.textoffset,'String',num2str(data.offsetICA));
      end

   case 'changelengthofplot'
      data=get(gcf,'UserData');
      val=floor(str2double(get(data.textplotlength,'String')));
      if ~isnan(val)
         data.lengthofplot=val;
         set(data.textplotlength,'String',num2str(data.lengthofplot));
         set(gcf,'CurrentAxes',data.axesx);
         showsig(data.x,data.beginofplot,data.lengthofplot,data.offsetICA,data.lengthofICA);
         set(gcf,'UserData',data);
         if data.lengthofplot<length(data.x), val='on'; else val='off'; end
         set(data.slider,'Enable',val);
      else
         set(data.textplotlength,'String',num2str(data.lengthofplot));
      end

   case 'changefilter'
      data=get(gcf,'UserData');
      val=floor(abs(str2double(get(data.textfilter,'String'))));
      if ~isnan(val) && val<=300 && val>2
         data.filterlength=val;
         set(data.textfilter,'String',num2str(data.filterlength));
         data.filterlengtheffective=round((1+0.4*abs(data.mu-1)*log10(data.filterlength))*data.filterlength/data.mu);
         set(gcf,'UserData',data);
      else
         set(data.textfilter,'String',num2str(data.filterlength));
      end
      set(data.textfiltereffectivectrl,'String',num2str(data.filterlengtheffective));      

   case 'changeweighting'
      data=get(gcf,'UserData');
      val=abs(str2double(get(data.wlevel,'String')));
      if ~isnan(val) && val<=100 && val>0
         data.weighting=val;
         set(data.wlevel,'String',num2str(data.weighting));
         set(gcf,'UserData',data);
      else
         set(data.wlevel,'String',num2str(data.weighting));
      end

   case 'changeiweights'
      data=get(gcf,'UserData');
      data.iweights=get(data.iweightsctrl,'Value');
      set(gcf,'UserData',data);
      
   case 'changewtype'
      data=get(gcf,'UserData');
      data.wtype=get(data.wtypectrl,'Value');
      set(gcf,'UserData',data);
      
   case 'changensubbands'
      data=get(gcf,'UserData');
      data.nsubbands=get(data.subbands,'Value');
      set(gcf,'UserData',data);
       
   case 'changesimilarity'
      data=get(gcf,'UserData');
      data.similarity=get(data.uisimilarity,'Value');
      set(gcf,'UserData',data);

   case 'changemu'
      data=get(gcf,'UserData');
      val=abs(str2double(get(data.muctrl,'String')));
      if ~isnan(val) && val<2 && val>0
         data.mu=val;
         set(data.muctrl,'String',num2str(data.mu));
         set(gcf,'UserData',data);
         data.filterlengtheffective=round((1+0.4*abs(data.mu-1)*log10(data.filterlength))*data.filterlength/data.mu);
         set(data.textfiltereffectivectrl,'String',num2str(data.filterlengtheffective));          
      else
         set(data.muctrl,'String',num2str(data.mu));
      end     

   case 'changefs'
      data=get(gcf,'UserData');
      val=floor(abs(str2double(get(data.textfs,'String'))));
      if ~isnan(val) && val>=1000 && val<=96000
         data.fs=val;
         set(data.textfs,'String',num2str(data.fs));
         set(gcf,'UserData',data);
      else
         set(data.textfs,'String',num2str(data.fs));
      end

   case 'changeicamethod'
      data=get(gcf,'UserData');
      switch get(data.icamethod,'Value')
          case 1
              data.method='efica';
          case 2
              data.method='bgl';
          case 3
              data.method='extefica';
          case 4
              data.method='bwasobi';
      end
      set(gcf,'UserData',data);
                  
   case 'hclus'
      data=get(gcf,'UserData');
      set(data.hclus,'Value',1);
      set(data.rfcm,'Value',0);
      data.clustering='hclus';
      set(data.wtypectrl,'String',{'Normal','Toeplitz','Binary'});
      %set(data.wtypectrl,'String',{'Normal','Constrained','Binary'});
      set(data.wtypectrl,'Value',weiTyp);
      data.wtype=weiTyp;
      set(gcf,'UserData',data);

   case 'rfcm'
      data=get(gcf,'UserData');
      set(data.hclus,'Value',0);
      set(data.rfcm,'Value',1);
      data.clustering='rfcm';
      set(data.wtypectrl,'String',{'Normal','Toeplitz','Binary','Fuzzy','F. Constrained', 'F. Binary'});
      set(data.wtypectrl,'Value',weiTyp);
      data.wtype=weiTyp;
      set(gcf,'UserData',data);

   case 'separation'
      data=get(gcf,'UserData');
%       h = waitbar(0,'Please wait...');

      param.lengthofICA=data.lengthofICA;
      param.offsetICA=data.offsetICA;
      param.method=data.method;
      param.weighting=data.weighting;
      param.wtype=data.wtype;
      param.clustering=data.clustering;
      param.mu=data.mu;
      param.useiweights=data.iweights;
      param.similarity=data.similarity;
      
      
      if data.nsubbands==1
          [data.shat data.microphones We Xdis]=BBS_deconv(data.x,data.filterlength-1,param);
      else % subband separation
          load gfilter          
          nbands=2^(data.nsubbands-1);
          N1=ceil(size(data.x,2)/nbands);
          U=zeros(nbands,N1,size(data.x,1));
          for i=1:size(data.x,1)
              U(:,:,i)=treeanalysis(g,data.x(i,:),data.nsubbands-1);
          end
          SBres=zeros(size(data.x,1),size(U,2),size(data.x,1),size(U,1));
          for i=1:size(U,1)
              fprintf('Band number %d ------------\n',i);
              % pridat podminku aby byl pocet zdroju roven poctu mikrofonu
              param.offsetICA=ceil(data.offsetICA/nbands);
              param.lengthofICA=ceil(data.lengthofICA/nbands);              
              [~, SBres(:,:,:,i)]=BBS_deconv(squeeze(U(i,:,:))',data.filterlength-1,param,h);              
          end
%           waitbar(0.95,h,'Permutation of subbands ...');
          SBres=SBpermute3(SBres);
          if isfield(data,'microphones')
              data=rmfield(data, 'microphones');
          end
          for m=1:size(data.x,1)
            for n=1:size(data.x,1)
             data.microphones(m,:,n)=treesynthesis(g,squeeze(SBres(m,:,n,:))');
            end
          end      
          data.shat=squeeze(data.microphones(1,:,:))';
      end
%       waitbar(1,h);
%       close(h)
      set(gcf,'CurrentAxes',data.axess);
      showsig(data.shat,1,length(data.shat),data.offsetICA,data.lengthofICA);
      set(gcf,'UserData',data);

      est = data.microphones;
      y = data.shat;
    
   case 'save'
      data=get(gcf,'UserData');
      if isfield(data,'shat')
         assignin('base','shat',data.shat)
         assignin('base','est_resp',data.microphones)
         fprintf('Separated signals stored into variables "shat" and "est_resp"\n');
      else
         fprintf('No separation results available. \n');
      end

   case 'sound'
      data=get(gcf,'UserData');
      if sigtype==data.axesx
         soundsc(data.x(toplay,:),data.fs)
      elseif sigtype==data.axess
         soundsc(data.microphones(1:2,:,toplay)',data.fs)
      end
   case 'record'
      data=get(gcf,'UserData');      
      if ~data.isrec
          close(gcf);
%           h=waitbar(0,'Recording 2 channels from default device...');
          recorder = audiorecorder(44100,16,2);
          recordblocking(recorder,5);
          audioarray = getaudiodata(recorder);
          BSS_tabcd(resample(audioarray,data.fs,44100)',data.fs);
          close(h);
      else
          numchan=get(data.numchan,'Value')+1;
          id=get(data.devrec,'Value');
          close(gcf);
%           h=waitbar(0,'Recording...');
          playrec2('delPage');
          page=playrec2('rec',5*data.devices(id).defaultSampleRate,1:numchan);
          playrec2('block',page);
          audioarray=double(playrec2('getRec',page));
          BSS_tabcd(resample(audioarray,data.fs,data.devices(id).defaultSampleRate)',data.fs);
          close(h);
      end
    case 'changedev'
      data=get(gcf,'UserData');
      id=get(data.devrec,'Value');
      if playrec2('isInitialised'), playrec2('reset');end
      playrec2('init',data.devices(id).defaultSampleRate,-1,data.devices(id).deviceID);
      maxchannels=playrec2('getRecMaxChannel');
      if maxchannels<2
          set(data.numchan,'Enable','off');
      else
          set(data.numchan,'Enable','on');
      end
      set(data.numchan,'String',num2str((2:maxchannels)'),'Value',1);      
end;    % switch action

% est = data.shat;